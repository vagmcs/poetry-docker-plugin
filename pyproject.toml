[project]
name = "poetry-docker-plugin"
description = "A poetry plugin for configure and build docker images."
readme = "README.md"
requires-python = ">=3.9"
keywords = [ "poetry", "packaging", "docker" ]
dynamic = [ "version", "classifiers", "dependencies" ]


[[project.authors]]
name = "Evangelos Michelioudakis"
email = "vagmcs@gmail.com"


[project.license]
text = "MIT"


[project.urls]
homepage = "https://github.com/vagmcs/python-blueprint"
repository = "https://github.com/vagmcs/poetry-docker-plugin"
documentation = "https://vagmcs.github.io/poetry-docker-plugin"


[project.entry-points."poetry.application.plugin"]
docker = "poetry_docker_plugin.plugin:DockerPlugin"


[tool.poetry]
version = "0.6.0"
requires-poetry = ">=2.0.0"
classifiers = [
"Intended Audience :: Developers",
"Intended Audience :: Information Technology",
"Intended Audience :: System Administrators",
"Operating System :: OS Independent",
"Topic :: Software Development",
"Topic :: Software Development :: Libraries",
"Topic :: Software Development :: Libraries :: Python Modules",
"Topic :: Software Development :: Libraries :: Application Frameworks",
"Topic :: Software Development :: Version Control :: Git",
"Topic :: System :: Archiving :: Packaging",
"Topic :: System :: Installation/Setup",
"Topic :: System :: Software Distribution",
"Programming Language :: Python",
"Programming Language :: Python :: 3",
"Programming Language :: Python :: 3 :: Only",
"Programming Language :: Python :: 3.9",
"Programming Language :: Python :: 3.10",
"Programming Language :: Python :: 3.11",
"Programming Language :: Python :: 3.12",
"Programming Language :: Python :: 3.13",
"License :: OSI Approved :: MIT License"
]


[[tool.poetry.packages]]
include = "poetry_docker_plugin"


[tool.poetry.dependencies]
python = "^3.9"
poetry = ">=2.0.0,<3.0.0"
gitpython = "^3.1.44"


[tool.poetry.group.dev.dependencies]
docformatter = "^1.7.7"
isort = "^6.0.1"
ruff = "^0.12.2"
mypy = "^1.16.1"
pyupgrade = "^3.20.0"
pytest = "^8.4.1"
pytest-cov = "^6.1.0"
pytest-sugar = "^1.0.0"
pytest-mock = "^3.14.1"
hypothesis = "^6.135.26"
mkdocs = "^1.6.1"
pre-commit = "^4.2.0"
commitizen = "^4.8.3"
cz-conventional-gitmoji = "^0.7.0"


[tool.mypy]
python_version = "3.9"
exclude = [ ".venv", "dist" ]
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_ignores = true
warn_no_return = true
ignore_missing_imports = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
check_untyped_defs = true
no_implicit_optional = true
strict_equality = true
implicit_reexport = true


[tool.docformatter]
black = true
in-place = true
recursive = true
pre-summary-newline = true
make-summary-multi-line = true


[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
color_output = true
sections = [
"FUTURE",
"TYPING",
"STDLIB",
"THIRDPARTY",
"FIRSTPARTY",
"LOCALFOLDER"
]
known_typing = "typing"
import_heading_future = "Futures"
import_heading_stdlib = "Standard Library"
import_heading_typing = "Types"
import_heading_thirdparty = "Dependencies"
import_heading_firstparty = "Project"


[tool.ruff]
line-length = 120
target-version = "py39"
exclude = [
".bzr",
".direnv",
".eggs",
".git",
".git-rewrite",
".hg",
".ipynb_checkpoints",
".mypy_cache",
".nox",
".pants.d",
".pyenv",
".pytest_cache",
".pytype",
".ruff_cache",
".svn",
".tox",
".venv",
".vscode",
"__pypackages__",
"_build",
"buck-out",
"build",
"dist",
"node_modules",
"site-packages",
"venv"
]


[tool.ruff.format]
docstring-code-format = true


[tool.pytest.ini_options]
addopts = "--capture=no --doctest-modules --cov=poetry_docker_plugin --no-cov-on-fail"
doctest_optionflags = [
"NUMBER",
"NORMALIZE_WHITESPACE",
"DONT_ACCEPT_TRUE_FOR_1",
"IGNORE_EXCEPTION_DETAIL"
]


[tool.commitizen]
name = "cz_gitmoji"
version_scheme = "pep440"
version_provider = "poetry"
update_changelog_on_bump = true
template = "docs/templates/changelog.j2"
changelog_file = "docs/docs/changelog.md"
release_notes_file = "docs/docs/release_notes.md"


[build-system]
requires = [ "poetry-core>=2.0.0,<3.0.0" ]
build-backend = "poetry.core.masonry.api"
